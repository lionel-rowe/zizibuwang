{"version":3,"sources":["assets/cc-cedict.tsv","assets/ZhiMangXing-Regular-subset.ttf","lib/load-fonts.ts","lib/theme.ts","components/Header.tsx","components/PageBackground.tsx","lib/handle-query-params.ts","lib/parse-tsv.ts","config.ts","lib/errors.ts","repos/cedict.ts","lib/search.ts","lib/pinyinize.ts","components/ResultsDisplay.tsx","components/SearchForm.tsx","components/SearchAndResults.tsx","components/ErrorBoundary.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","styles","document","createElement","innerHTML","ZhiMangXing","head","appendChild","theme","createMuiTheme","palette","common","black","white","type","primary","main","light","dark","contrastText","secondary","error","warning","info","success","grey","A100","A200","A400","A700","contrastThreshold","tonalOffset","text","disabled","hint","divider","background","paper","default","action","active","hover","hoverOpacity","selected","disabledBackground","style","color","textAlign","padding","Typography","variant","component","width","height","position","zIndex","SAMPLES","rowHeadingsToProps","rows","headers","map","e","obj","forEach","h","i","config","DB_VERSION","MAX_TIMEOUT","DB_NAME","CEDICT_TABLE_NAME","NoDataError","Error","seedDb","db","a","connection","navigator","saveData","fetch","cedictUrl","method","contentLength","get","title","toFixed","Swal","fire","showCancelButton","confirmButtonText","icon","value","res","trim","split","line","cell","entries","tx","transaction","objectStore","put","localStorage","removeItem","setItem","Promise","resolve","reject","openDB","upgrade","oldVersion","_newVersion","createObjectStore","clear","_db","store","getKey","getItem","console","Cedict","all","search","query","data","lines","el","filter","startsWith","log","length","conditions","RangeError","toCondition","searchWorker","Worker","process","postMessage","onmessage","terminate","results","setTimeout","clause","matcher","matches","match","SyntaxError","groups","toneMarks","o","u","v","A","E","I","O","U","V","withToneMark","syl","lastChar","slice","test","tone","replace","m","char","addToneMark","prettify","word","s","isPinyin","normalize","ResultsDisplay","resultsLoading","whiteSpace","className","display","justifyContent","CircularProgress","zoom","trad","simp","pinyin","def","Fragment","key","join","SearchForm","submitForm","marginTop","onSubmit","FormControl","margin","fullWidth","TextField","id","InputProps","fontFamily","label","multiline","autoComplete","autoCorrect","autoCapitalize","spellCheck","name","placeholder","Button","SearchAndResults","useState","setResults","setResultsLoading","setCedictDataLoading","cedictDataError","setCedictDataError","useEffect","num","URLSearchParams","window","location","preset","querySelector","textContent","handleQueryParams","preventDefault","FormData","currentTarget","message","paragraph","Link","href","onClick","reload","ErrorBoundary","props","state","undefined","errorInfo","this","setState","children","toString","componentStack","React","Component","App","ThemeProvider","PageBackground","Header","Container","maxWidth","opacity","target","rel","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","origin","addEventListener","response","contentType","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cb9cad61.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cc-cedict.02fc0569.tsv\";","module.exports = __webpack_public_path__ + \"static/media/ZhiMangXing-Regular-subset.c382153c.ttf\";","import ZhiMangXing from '../assets/ZhiMangXing-Regular-subset.ttf';\n\nconst styles = document.createElement('style');\n\nstyles.innerHTML = `\n    @font-face {\n        font-family: 'ZhiMangXing';\n        src: url(${ZhiMangXing});\n    }\n`;\n\ndocument.head.appendChild(styles);\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        common: { black: '#000', white: '#fff' },\n        type: 'dark',\n        primary: {\n            main: '#357',\n            light: 'rgb(91,119,146)',\n            dark: 'rgb(35,59,83)',\n            contrastText: '#fff',\n        },\n        secondary: {\n            main: '#26c6dd',\n            light: 'rgb(81,209,227)',\n            dark: 'rgb(26,138,154)',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: '#d32f2f',\n            contrastText: '#fff',\n        },\n        warning: {\n            light: '#ffb74d',\n            main: '#ff9800',\n            dark: '#f57c00',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        info: {\n            light: '#64b5f6',\n            main: '#2196f3',\n            dark: '#1976d2',\n            contrastText: '#fff',\n        },\n        success: {\n            light: '#81c784',\n            main: '#4caf50',\n            dark: '#388e3c',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        grey: {\n            '50': '#fafafa',\n            '100': '#f5f5f5',\n            '200': '#eeeeee',\n            '300': '#e0e0e0',\n            '400': '#bdbdbd',\n            '500': '#9e9e9e',\n            '600': '#757575',\n            '700': '#616161',\n            '800': '#424242',\n            '900': '#212121',\n            A100: '#d5d5d5',\n            A200: '#aaaaaa',\n            A400: '#303030',\n            A700: '#616161',\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        text: {\n            primary: '#fff',\n            secondary: 'rgba(255,255,255,0.7)',\n            disabled: 'rgba(255,255,255,0.5)',\n            hint: 'rgba(255,255,255,0.5)',\n        },\n        divider: 'rgba(255,255,255,0.12)',\n        background: {\n            paper: '#424242',\n            default: '#121212',\n        },\n        action: {\n            active: '#fff',\n            hover: 'rgba(255,255,255,0.08)',\n            hoverOpacity: 0.08,\n            selected: 'rgba(255,255,255,0.16)',\n            disabled: 'rgba(255,255,255,0.3)',\n            disabledBackground: 'rgba(255,255,255,0.12)',\n        },\n    },\n});\n\nexport { theme };\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default () => {\n    return (\n        <header\n            style={{\n                color: 'antiquewhite',\n                textAlign: 'center',\n                padding: '2em',\n            }}\n        >\n            <Typography variant='h1' component='h1'>\n                字字不忘\n            </Typography>\n        </header>\n    );\n};\n","import React from \"react\";\n\nexport default () => {\n    return (\n        <div\n            style={{\n                width: '100vw',\n                height: '100vh',\n                position: 'fixed',\n                background: 'linear-gradient(180deg, #111, #022)',\n                zIndex: -1,\n            }}\n        />\n    );\n};\n","const SAMPLES = [\n    `# traditional identical to simplified\n\ntrad sameas simp\ntrad minlength 2\ntrad !match \\\\P{Script=Han}`,\n\n    `# 不...不 pattern with syllable li3 or li4\n\nsimp match 不.不\nsimp length 4\npinyin imatch \\\\bli[34]`,\n\n    `# fuzzy match on xian2 xiao4\n\npinyin imatch ^(?:sh?[ea]|xia)ng?[12] xiao4$`,\n\n    `# fuzzy match on xiao4 er2 bu4 yu3\n\npinyin imatch ^(?:xi|sh)ao4 er2 bu4 y[ui][23]$`,\n\n    `# 班门弄斧\n\npinyin icontains ban1\nsimp contains 斧\nsimp length 4`,\n\n    `# triplicate characters\n\nsimp match (.)\\\\1\\\\1`,\n\n    `# 说曹操……\n\nsimp match (..)，\\\\1`,\n];\n\nconst handleQueryParams = () => {\n    // @ts-ignore - binary or to cast to number\n    const num = new URLSearchParams(window.location.search).get('preset') | 0;\n\n    const preset = num && SAMPLES[num - 1];\n\n    if (preset) {\n        (document.querySelector('#search-conditions') as HTMLTextAreaElement).textContent = preset;\n    }\n};\n\nexport { handleQueryParams };\n","const parseTsv = (tsv: string) => {\n    const lines = tsv.trim().split(/\\r?\\n/);\n\n    return lines.map(line => {\n        const cells = line.split('\\t').map(cell => cell.trim());\n\n        return cells;\n    });\n};\n\nconst rowHeadingsToProps = (rows: string[][]) => {\n    const [ headers, ...entries ] = rows;\n\n    return entries.map(e => {\n        const obj: { [key: string]: string } = {};\n\n        headers.forEach((h, i) => obj[h] = e[i]);\n\n        return obj;\n    });\n}\n\nexport { parseTsv, rowHeadingsToProps };\n","import DB_VERSION from './db-version.json';\n\nconst config = {\n    DB_VERSION,\n    MAX_TIMEOUT: 3000,\n    DB_NAME: 'dict_data',\n    CEDICT_TABLE_NAME: 'cedict',\n};\n\nexport default config;\n","class NoDataError extends Error {}\n\nexport { NoDataError };\n","import { parseTsv, rowHeadingsToProps } from '../lib/parse-tsv';\nimport config from '../config';\nimport { openDB, deleteDB, IDBPDatabase } from 'idb';\nimport Swal from 'sweetalert2';\n\nimport cedictUrl from '../assets/cc-cedict.tsv';\nimport { NoDataError } from '../lib/errors';\n\nconst { DB_NAME, CEDICT_TABLE_NAME, DB_VERSION } = config;\n\nconst DB_REQUIRES_SEEDING = 'dbRequiresSeeding';\nconst CEDICT_TSV_ETAG = 'cedictTsvEtag';\n\nconst seedDb = async (db: IDBPDatabase) => {\n    const connection = (navigator as any).connection || {};\n\n    if (\n        process.env.NODE_ENV === 'development' ||\n        connection.saveData ||\n        connection.type === 'cellular'\n    ) {\n        const head = await fetch(cedictUrl, {\n            method: 'HEAD',\n        });\n\n        const contentLength = head.headers.get('content-length');\n\n        const title = contentLength\n            ? `Download ${(+contentLength / 1000 / 1000).toFixed(1)}\\xa0MB?`\n            : 'Download data?';\n\n        const userConfirmed = await Swal.fire({\n            showCancelButton: true,\n            confirmButtonText: 'Download',\n            title,\n            text:\n                'This is required the first time you run this app. Consider switching to a Wi-Fi connection.',\n            icon: 'question',\n        });\n\n        if (!userConfirmed.value) {\n            // TODO - show app load fail state\n\n            throw new NoDataError('User declined to download data');\n        }\n    }\n\n    const res = await fetch(cedictUrl);\n    const text = await res.text();\n\n    const rows = parseTsv(text);\n    const entries = rowHeadingsToProps(rows);\n\n    const tx = db.transaction(CEDICT_TABLE_NAME, 'readwrite');\n    const store = tx.objectStore(CEDICT_TABLE_NAME);\n\n    store.put(entries, 'entries');\n\n    localStorage.removeItem(DB_REQUIRES_SEEDING);\n    localStorage.setItem(CEDICT_TSV_ETAG, res.headers.get('etag') || 'unknown');\n\n    return;\n};\n\nlet db = new Promise<IDBPDatabase>(async (resolve, reject) => {\n    const _db = await openDB(DB_NAME, DB_VERSION, {\n        upgrade(db, oldVersion, _newVersion, transaction) {\n            if (!oldVersion) {\n                db.createObjectStore(CEDICT_TABLE_NAME);\n            }\n\n            if (oldVersion < 1582933903995) {\n                localStorage.clear();\n\n                const store = transaction.objectStore(CEDICT_TABLE_NAME);\n\n                store.clear();\n            }\n\n            localStorage.setItem(DB_REQUIRES_SEEDING, 'yes');\n        },\n    });\n\n    const tx = _db.transaction(CEDICT_TABLE_NAME);\n    const store = tx.objectStore(CEDICT_TABLE_NAME);\n\n    const entriesExist = await store.getKey('entries');\n\n    if (!entriesExist && localStorage.getItem(DB_REQUIRES_SEEDING)) {\n        try {\n            await seedDb(_db);\n        } catch(e) {\n            console.error(e);\n\n            reject(e)\n        }\n    }\n\n    resolve(_db);\n});\n\nconst Cedict = {\n    all: new Promise<CedictEntry[]>(async (resolve, reject) => {\n        try {\n            const _db = await db;\n\n            const tx = _db.transaction(CEDICT_TABLE_NAME);\n            const store = tx.objectStore(CEDICT_TABLE_NAME);\n\n            const entries = await store.get('entries');\n\n            resolve(entries);\n\n        } catch (e) {\n            console.error(e);\n\n            reject(e);\n        }\n    }),\n};\n\nif (process.env.NODE_ENV === 'development') {\n    // debug\n\n    const _window = window as any;\n\n    _window.deleteDB = deleteDB;\n    _window.openDB = openDB;\n    _window.seedDb = seedDb;\n    _window.Cedict = Cedict;\n    _window.db = db;\n}\n\nexport default Cedict;\n","import config from '../config';\n\nconst { MAX_TIMEOUT } = config;\n\nconst search = async (\n    query: string,\n    data: any /* TODO */,\n): Promise<{ results?: CedictEntry[]; error?: Error }> => {\n    let error, results;\n\n    try {\n        let conditions: SearchCondition[];\n\n        const lines = query\n            .split(/\\r?\\n/)\n            .map(el => el.trim())\n            .filter(el => el && !el.startsWith('#'));\n\n        console.log(lines)\n\n        if (lines.length === 1 && lines[0] === '*') {\n            conditions = [] as SearchCondition[];\n        } else if (lines.length === 0) {\n            throw new RangeError('Must have at last one condition');\n        } else {\n            conditions = lines.map(toCondition);\n        }\n\n        const searchWorker = new Worker(\n            process.env.PUBLIC_URL + '/search-worker.js',\n        );\n\n        searchWorker.postMessage({\n            type: 'SEARCH',\n            conditions,\n            entries: data,\n        });\n\n        results = await new Promise<CedictEntry[]>((resolve, reject) => {\n            searchWorker.onmessage = ({ data }) => {\n                if (data.type === 'ERROR') {\n                    reject(data.error);\n                }\n\n                searchWorker.terminate();\n\n                resolve(data.results);\n            };\n\n            setTimeout(() => {\n                searchWorker.terminate();\n\n                reject('Timeout exceeded');\n            }, MAX_TIMEOUT);\n        });\n    } catch (e) {\n        error = e;\n    }\n\n    return { results, error };\n};\n\nfunction toCondition(clause: string): SearchCondition {\n    const matcher = /^(?<prop>\\S+)\\s+(?<method>\\S+)\\s+(?<arg>.+)$/;\n\n    const matches = clause.match(matcher);\n\n    if (!matches) {\n        throw new SyntaxError(\n            'Each condition must be formatted as \"subject verb object\"',\n        );\n    }\n\n    return { ...matches.groups as any as SearchCondition };\n}\n\nexport { search };\n","type vowel =\n    | 'a'\n    | 'e'\n    | 'i'\n    | 'o'\n    | 'u'\n    | 'v'\n    | 'A'\n    | 'E'\n    | 'I'\n    | 'O'\n    | 'U'\n    | 'V';\n\nconst toneMarks: { [key in vowel]: string } = {\n    a: 'aāáǎà',\n    e: 'eēéěè',\n    i: 'iīíǐì',\n    o: 'oōóǒò',\n    u: 'uūúǔù',\n    v: 'üǖǘǚǜ',\n    A: 'AĀÁǍÀ',\n    E: 'EĒÉĚÈ',\n    I: 'IĪÍǏÌ',\n    O: 'OŌÓǑÒ',\n    U: 'UŪÚǓÙ',\n    V: 'ÜǕǗǙǛ',\n};\n\nconst normalize = (syl: string) => syl.replace(/u:|v/g, 'ü');\n\nconst addToneMark = (char: vowel | 'ü', tone: number) => {\n    if (tone === 5) tone = 0;\n\n    if (char === 'ü') char = 'v';\n\n    return toneMarks[char][tone];\n};\n\nconst isPinyin = (syl: string) => /^[a-zü:]+\\d?$/i.test(syl);\n\nconst withToneMark = (syl: string) => {\n    const lastChar = syl.slice(-1)[0];\n\n    if (!/\\d/.test(lastChar)) {\n        syl += '5';\n    }\n\n    const tone = +syl.slice(-1)[0];\n\n    return syl\n        .slice(0, -1)\n        .replace(/(?:a|e|o(?=u)|[iouüv](?![aeiouüv]))/i, m =>\n            addToneMark(m as vowel | 'ü', tone),\n        );\n};\n\nconst prettifySyl = (syl: string) => {\n    return isPinyin(syl) ? withToneMark(normalize(syl)) : syl;\n};\n\nconst prettify = (word: string) =>\n    word.replace(/[a-zü:]+\\d?/gi, s => prettifySyl(s));\n\nexport { prettify };\n\n// success\n// prettify('Ni3 you3 nu:3 peng2 you3 ma?');\n// prettify('Ma3 ma3, hu1 hu5 nv5');\n// prettify('mao4 mei4');\n// prettify('xiong1 shi4 ji1 dan4');\n// prettify('lu:e4');\n// prettify('lve4');\n// prettify('lüe4');\n\n// // known issues\n// prettify('high5');\n// prettify('GangOf4');\n\n// \"Nǐ yǒu nǚ péng yǒu ma?\"\n","import React from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { prettify } from '../lib/pinyinize';\n\nconst ResultsDisplay = ({\n    results,\n    resultsLoading,\n}: {\n    results: CedictEntry[];\n    resultsLoading: boolean;\n}) => {\n    return (\n        <pre style={{ whiteSpace: 'pre-wrap' }}>\n            <output className='output'>\n                {resultsLoading ? (\n                    <div\n                        style={{\n                            display: 'flex',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <CircularProgress\n                            style={{ zoom: 1.2 }}\n                            color='secondary'\n                        />\n                    </div>\n                ) : (\n                    results.length > 0 && <>\n                        <div><strong>{results.length}</strong>{' results\\n\\n\\n'}</div>\n                        {results\n                            .slice(0, 100)\n                            .map(({ trad, simp, pinyin, def }) => {\n                                return (\n                                    <React.Fragment\n                                        key={`${trad} ${simp} [${pinyin}]`}\n                                    >\n                                        {`${trad} | ${simp} [${prettify(\n                                            pinyin,\n                                        )}]\\n${def\n                                            .split(/\\s*[/;]\\s*/)\n                                            .map(e => `• ${e}`)\n                                            .join('\\n')}\\n\\n\\n`}\n                                    </React.Fragment>\n                                );\n                            })}\n                    </>\n                )}\n            </output>\n        </pre>\n    );\n};\n\nexport default ResultsDisplay;\n","import React from 'react';\nimport { FormControl, TextField, Button } from '@material-ui/core';\n\nconst SearchForm = ({\n    submitForm,\n}: {\n    submitForm: (e: React.FormEvent<HTMLFormElement>) => Promise<void>;\n}) => {\n    return (\n        <form style={{ marginTop: '1em' }} onSubmit={submitForm}>\n            <FormControl style={{ margin: '1em 0' }} fullWidth>\n                <TextField\n                    id='search-conditions'\n                    InputProps={{\n                        style: {\n                            fontFamily: 'Consolas, monospace',\n                        },\n                    }}\n                    label='Search query'\n                    variant='filled'\n                    multiline\n                    autoComplete='off'\n                    autoCorrect='off'\n                    autoCapitalize='off'\n                    spellCheck='false'\n                    name='search-conditions'\n                    placeholder='Syntax: subject verb object'\n                ></TextField>\n            </FormControl>\n            <FormControl style={{ margin: '1em 0' }}>\n                <Button type='submit' variant='contained' color='primary'>\n                    Search\n                </Button>\n            </FormControl>\n        </form>\n    );\n};\n\nexport default SearchForm;\n","import React, { useState, useEffect } from 'react';\nimport { Typography, Link } from '@material-ui/core';\nimport { handleQueryParams } from '../lib/handle-query-params';\nimport Cedict from '../repos/cedict';\nimport { search } from '../lib/search';\nimport Swal from 'sweetalert2';\nimport { NoDataError } from '../lib/errors';\nimport ResultsDisplay from './ResultsDisplay';\nimport SearchForm from './SearchForm';\n\nconst SearchAndResults = () => {\n    const [results, setResults] = useState([] as CedictEntry[]);\n    const [resultsLoading, setResultsLoading] = useState(false);\n    const [, setCedictDataLoading] = useState(true);\n    const [cedictDataError, setCedictDataError] = useState(\n        null as NoDataError | null,\n    );\n\n    useEffect(() => {\n        handleQueryParams();\n\n        (async () => {\n            try {\n                await Cedict.all;\n            } catch (e) {\n                if (e instanceof NoDataError) {\n                    setCedictDataError(e);\n                }\n            }\n\n            setCedictDataLoading(false);\n        })();\n    }, []);\n\n    const submitForm = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n\n        setResults([]);\n        setResultsLoading(true);\n\n        const query = new FormData(e.currentTarget).get(\n            'search-conditions',\n        ) as string;\n\n        const data = await Cedict.all;\n\n        const { results, error } = await search(query, data);\n\n        if (error) {\n            Swal.fire({ text: error.message, icon: 'error' });\n\n            setResultsLoading(false);\n            setResults([]);\n        } else {\n            setResultsLoading(false);\n            setResults(results as CedictEntry[]);\n        }\n    };\n\n    return cedictDataError ? (\n        <>\n            <Typography variant='h4' paragraph component='h2'>\n                No dictionary data loaded\n            </Typography>\n            <div>\n                <Typography variant='body1' paragraph component='p'>\n                    Dictionary data is required to run this app. Please{' '}\n                    <Link href='' onClick={() => window.location.reload()}>\n                        reload the page\n                    </Link>{' '}\n                    and try again.\n                </Typography>\n            </div>\n        </>\n    ) : (\n        <>\n            <SearchForm submitForm={submitForm} />\n            <ResultsDisplay results={results} resultsLoading={resultsLoading} />\n        </>\n    );\n};\n\nexport default SearchAndResults;\n","import React from 'react';\n\ninterface ErrorInfoObject {\n    componentStack: any;\n}\n\ninterface ErrorBoundaryState { error?: Error; errorInfo?: ErrorInfoObject }\n\nclass ErrorBoundary extends React.Component {\n    constructor(props: any) {\n        super(props);\n\n        const state: ErrorBoundaryState = {\n            error: undefined,\n            errorInfo: undefined,\n        };\n\n        this.state = state;\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfoObject) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        });\n    }\n\n    render() {\n        const { error, errorInfo } = this.state as ErrorBoundaryState;\n        const { children } = this.props;\n\n        if (error) {\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\n                        {error?.toString()}\n                        <br />\n                        {errorInfo?.componentStack}\n                    </details>\n                </div>\n            );\n        }\n        return children;\n    }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\nimport { Container, Typography, Link } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport './lib/load-fonts';\n\nimport { theme } from './lib/theme';\n\nimport Header from './components/Header';\nimport PageBackground from './components/PageBackground';\nimport SearchAndResults from './components/SearchAndResults';\nimport ErrorBoundary from './components/ErrorBoundary';\n\nconst App = () => {\n    return (\n        <ThemeProvider theme={theme}>\n            <PageBackground />\n            <Header />\n            <main>\n                <Container maxWidth='sm'>\n                    <ErrorBoundary>\n                        <SearchAndResults />\n                    </ErrorBoundary>\n                </Container>\n            </main>\n            <footer>\n                <Container maxWidth='sm' style={{ margin: '2em auto' }}>\n                    <hr style={{ opacity: 0.3 }} />\n                    <Typography variant='body1' component='p'>\n                        Data from{' '}\n                        <Link\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            href='https://cc-cedict.org/wiki/'\n                        >\n                            CC-CEDICT\n                        </Link>{' '}\n                        (\n                        <Link\n                            target='_blank'\n                            rel='noopener noreferrer'\n                            href='https://creativecommons.org/licenses/by-sa/3.0/'\n                        >\n                            CC BY-SA 3.0\n                        </Link>\n                        ).\n                    </Typography>\n                </Container>\n            </footer>\n        </ThemeProvider>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}