{"version":3,"sources":["lib/setup.ts","lib/load-fonts.ts","lib/theme.ts","components/PageBackground.tsx","lib/b64.ts","lib/query-param-helper.ts","lib/parse-tsv.ts","config.ts","lib/errors.ts","components/Modal.tsx","lib/fireModal.ts","repositories/cedict.ts","lib/pinyinize.ts","lib/search.ts","lib/convertBasicToAdvanced.ts","state/Context.tsx","components/Result.tsx","hooks/useHtmlId.ts","components/ResultsDisplay.tsx","components/BasicSearch.tsx","components/AdvancedSearch.tsx","components/SearchForm.tsx","pages/SearchPage.tsx","components/Link.tsx","components/Header.tsx","components/ErrorBoundary.tsx","layouts/MainSubLayout.tsx","components/MainNav.tsx","layouts/MainLayout.tsx","content/instructions.ts","pages/DocsPage.tsx","components/Footer.tsx","pages/SettingsPage.tsx","App.tsx","serviceWorker.js","index.tsx","assets/cc-cedict.tsv","assets/ZhiMangXing-Regular-subset.ttf"],"names":["setVh","vh","window","innerHeight","document","documentElement","style","setProperty","addEventListener","styles","createElement","innerHTML","ZhiMangXing","head","appendChild","theme","createMuiTheme","palette","common","black","white","type","primary","main","light","dark","contrastText","secondary","error","warning","info","success","grey","A100","A200","A400","A700","contrastThreshold","tonalOffset","text","disabled","hint","divider","background","paper","default","action","active","hover","hoverOpacity","selected","disabledBackground","width","height","position","zIndex","encodeB64UrlSafe","str","bin","TextEncoder","encode","binStr","Array","from","map","n","String","fromCharCode","join","btoa","encodeB64","replace","decodeB64UrlSafe","b64UrlSafe","b64","binArr","atob","split","char","charCodeAt","Uint8Array","TextDecoder","decode","decodeB64","noPadding","padLength","length","repeat","_urlUnsafe","getQueryParam","paramName","URLSearchParams","location","search","get","_setAllQueryParams","allQueryParams","pushNewHistoryItem","newQueryString","toString","newPath","pathname","history","path","setQueryParam","newVal","set","deleteQueryParam","delete","setB64QueryParam","rowHeadingsToProps","rows","headers","e","obj","forEach","h","i","config","DB_VERSION","MAX_TIMEOUT","DB_NAME","CEDICT_TABLE_NAME","NoDataError","Error","Modal","isOpen","onResolve","title","showCancelButton","icon","confirmButtonText","cancelButtonText","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","variant","disableElevation","onClick","color","autoFocus","fireModal","createModal","seedDb","db","a","connection","navigator","saveData","fetch","cedictUrl","method","contentLength","toFixed","HelpOutlineIcon","res","trim","line","cell","entries","tx","transaction","objectStore","put","localStorage","removeItem","setItem","Promise","resolve","reject","openDB","upgrade","oldVersion","_newVersion","createObjectStore","clear","_db","store","getKey","getItem","console","Cedict","all","toneMarks","o","u","v","A","E","I","O","U","V","withToneMark","syl","lastChar","slice","test","tone","m","addToneMark","prettify","word","s","isPinyin","normalize","query","data","logicalOr","lines","el","filter","startsWith","conditions","RangeError","toCondition","searchWorker","Worker","process","postMessage","onmessage","terminate","results","setTimeout","clause","matcher","matches","match","SyntaxError","groups","convertBasicToAdvanced","converted","p","log","initialState","charSet","searchQuery","resultsLoading","cedictDataLoading","page","searchType","reducer","state","Object","k","loadResultsFromQuery","dispatch","message","ErrorOutlineIcon","AppContext","React","createContext","AppStateProvider","children","useReducer","value","useMemo","Provider","useStyles","makeStyles","root","marginBottom","charGloss","display","flexWrap","rubyRoot","fontSize","paddingRight","defList","paddingLeft","margin","headwordNoRuby","Result","entry","classes","isLast","useContext","pinyin","def","currentCharVersion","chars","oppCharTypeName","oppCharVersion","pinyinSyls","py","renderRuby","idx","className","key","toUpperCase","item","useHtmlId","prefix","useState","ResultsList","result","ResultsDisplay","outputId","marginTop","justifyContent","CircularProgress","zoom","flexGrow","padding","toLocaleString","Pagination","onChange","_e","scrollTo","count","Math","floor","BasicSearch","searchConditionsId","FormControl","fullWidth","InputLabel","htmlFor","FilledInput","currentTarget","autoComplete","autoCorrect","autoCapitalize","spellCheck","name","placeholder","endAdornment","InputAdornment","Tooltip","placement","arrow","IconButton","aria-label","top","transform","right","marginRight","AdvancedSearch","fontFamily","multiline","TabPanel","labelledBy","hidden","SearchForm","searchFormId","submitForm","preventDefault","basicSearchTabId","advancedSearchTabId","basicSearchPanelId","advancedSearchPanelId","onSubmit","Tabs","indicatorColor","navigate","Tab","label","aria-controls","SearchPage","handleQueryParams","val","getB64QueryParam","useEffect","removeEventListener","Typography","paragraph","component","href","JSON","parse","Link","forwardRef","ref","to","absolute","external","props","target","rel","textAlign","paddingTop","paddingBottom","tabIndex","ErrorBoundary","undefined","errorInfo","this","setState","whiteSpace","componentStack","Component","MainSubLayout","Container","maxWidth","listRoot","listStyleType","links","Icon","HomeIcon","InfoIcon","SettingsIcon","MainNav","role","MainLayout","Header","instructions","snarkdown","samples","content","DocsPage","dangerouslySetInnerHTML","__html","queryString","Footer","SettingsPage","FormLabel","RadioGroup","FormControlLabel","control","Radio","App","ThemeProvider","PageBackground","basepath","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","getElementById","URL","origin","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.1ce08de5.chunk.js","sourcesContent":["export {}\n\nconst setVh = () => {\n    const vh = window.innerHeight * 0.01\n    document.documentElement.style.setProperty('--vh', `${vh}px`)\n}\n\nwindow.addEventListener('resize', setVh)\n\nsetVh()\n","import ZhiMangXing from '../assets/ZhiMangXing-Regular-subset.ttf'\n\nconst styles = document.createElement('style')\n\nstyles.innerHTML = `\n    @font-face {\n        font-family: 'ZhiMangXing';\n        src: url(${ZhiMangXing});\n    }\n`\n\ndocument.head.appendChild(styles)\n","import { createMuiTheme } from '@material-ui/core/styles'\n\nconst theme = createMuiTheme({\n    palette: {\n        common: { black: '#000', white: '#fff' },\n        type: 'dark',\n        primary: {\n            main: '#26c6dd',\n            light: 'rgb(81,209,227)',\n            dark: 'rgb(26,138,154)',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        secondary: {\n            main: '#357',\n            light: 'rgb(91,119,146)',\n            dark: 'rgb(35,59,83)',\n            contrastText: '#fff',\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: '#d32f2f',\n            contrastText: '#fff',\n        },\n        warning: {\n            light: '#ffb74d',\n            main: '#ff9800',\n            dark: '#f57c00',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        info: {\n            light: '#64b5f6',\n            main: '#2196f3',\n            dark: '#1976d2',\n            contrastText: '#fff',\n        },\n        success: {\n            light: '#81c784',\n            main: '#4caf50',\n            dark: '#388e3c',\n            contrastText: 'rgba(0,0,0,0.87)',\n        },\n        grey: {\n            '50': '#fafafa',\n            '100': '#f5f5f5',\n            '200': '#eeeeee',\n            '300': '#e0e0e0',\n            '400': '#bdbdbd',\n            '500': '#9e9e9e',\n            '600': '#757575',\n            '700': '#616161',\n            '800': '#424242',\n            '900': '#212121',\n            A100: '#d5d5d5',\n            A200: '#aaaaaa',\n            A400: '#303030',\n            A700: '#616161',\n        },\n        contrastThreshold: 3,\n        tonalOffset: 0.2,\n        text: {\n            primary: '#fff',\n            secondary: 'rgba(255,255,255,0.7)',\n            disabled: 'rgba(255,255,255,0.5)',\n            hint: 'rgba(255,255,255,0.5)',\n        },\n        divider: 'rgba(255,255,255,0.12)',\n        background: {\n            paper: '#424242',\n            default: '#121212',\n        },\n        action: {\n            active: '#fff',\n            hover: 'rgba(255,255,255,0.08)',\n            hoverOpacity: 0.08,\n            selected: 'rgba(255,255,255,0.16)',\n            disabled: 'rgba(255,255,255,0.3)',\n            disabledBackground: 'rgba(255,255,255,0.12)',\n        },\n    },\n})\n\nexport { theme }\n","import React from 'react'\n\nexport default () => {\n    return (\n        <div\n            style={{\n                width: '100vw',\n                height: '100vh',\n                position: 'fixed',\n                background: 'linear-gradient(180deg, #111, #022)',\n                zIndex: -1,\n            }}\n        />\n    )\n}\n","const decodeB64 = (b64: string) => {\n    const binStr = atob(b64)\n\n    const binArr = binStr.split('').map(char => char.charCodeAt(0))\n\n    const bin = new Uint8Array(binArr)\n\n    return new TextDecoder().decode(bin)\n}\n\nconst encodeB64 = (str: string) => {\n    const bin = new TextEncoder().encode(str)\n\n    const binStr = Array.from(bin)\n        .map(n => String.fromCharCode(n))\n        .join('')\n\n    return btoa(binStr)\n}\n\nconst _urlSafe = (b64: string) =>\n    b64\n        .replace(/=/g, '')\n        .replace(/\\+/g, '-')\n        .replace(/\\//g, '_')\n\nconst _urlUnsafe = (b64UrlSafe: string) => {\n    const noPadding = b64UrlSafe.replace(/-/g, '+').replace(/_/g, '/')\n\n    const padLength = 4 - (noPadding.length % 4 || 4)\n\n    return noPadding + '='.repeat(padLength)\n}\n\nconst encodeB64UrlSafe = (str: string) => _urlSafe(encodeB64(str))\n\nconst decodeB64UrlSafe = (b64UrlSafe: string) =>\n    decodeB64(_urlUnsafe(b64UrlSafe))\n\nexport { decodeB64, encodeB64, encodeB64UrlSafe, decodeB64UrlSafe }\n","import { decodeB64UrlSafe, encodeB64UrlSafe } from './b64'\n\nconst getQueryParam = (paramName: string) =>\n    new URLSearchParams(window.location.search).get(paramName)\n\nconst _setAllQueryParams = (\n    allQueryParams: URLSearchParams,\n    pushNewHistoryItem: boolean,\n) => {\n    const newQueryString = Array.from(allQueryParams).length\n        ? '?' + allQueryParams.toString()\n        : ''\n\n    const newPath = window.location.pathname + newQueryString\n\n    window.history[pushNewHistoryItem ? 'pushState' : 'replaceState'](\n        { path: newPath },\n        '',\n        newPath,\n    )\n}\n\nconst clearAllQueryParams = (pushNewHistoryItem: boolean) => {\n    _setAllQueryParams(new URLSearchParams([]), pushNewHistoryItem)\n}\n\nconst setQueryParam = (\n    paramName: string,\n    newVal: string,\n    pushNewHistoryItem: boolean,\n) => {\n    const allQueryParams = new URLSearchParams(window.location.search)\n\n    allQueryParams.set(paramName, newVal)\n\n    _setAllQueryParams(allQueryParams, pushNewHistoryItem)\n}\n\nconst deleteQueryParam = (paramName: string, pushNewHistoryItem: boolean) => {\n    const allQueryParams = new URLSearchParams(window.location.search)\n\n    allQueryParams.delete(paramName)\n\n    _setAllQueryParams(allQueryParams, pushNewHistoryItem)\n}\n\nconst getB64QueryParam = (paramName: string) => {\n    const val = getQueryParam(paramName)\n\n    return val && decodeB64UrlSafe(val)\n}\n\nconst setB64QueryParam = (\n    paramName: string,\n    newVal: string,\n    pushNewHistoryItem: boolean,\n) => {\n    const b64 = encodeB64UrlSafe(newVal)\n\n    setQueryParam(paramName, b64, pushNewHistoryItem)\n}\n\nexport {\n    getQueryParam,\n    setQueryParam,\n    deleteQueryParam,\n    getB64QueryParam,\n    setB64QueryParam,\n    clearAllQueryParams,\n}\n","const parseTsv = (tsv: string) => {\n    const lines = tsv.trim().split(/\\r?\\n/)\n\n    return lines.map(line => {\n        const cells = line.split('\\t').map(cell => cell.trim())\n\n        return cells\n    })\n}\n\nconst rowHeadingsToProps = (rows: string[][]) => {\n    const [headers, ...entries] = rows\n\n    return entries.map(e => {\n        const obj: { [key: string]: string } = {}\n\n        headers.forEach((h, i) => (obj[h] = e[i]))\n\n        return obj\n    })\n}\n\nexport { parseTsv, rowHeadingsToProps }\n","import DB_VERSION from './db-version.json'\n\nconst config = {\n    DB_VERSION,\n    MAX_TIMEOUT: 3000,\n    DB_NAME: 'dict_data',\n    CEDICT_TABLE_NAME: 'cedict',\n}\n\nexport default config\n","class NoDataError extends Error {}\n\nexport { NoDataError }\n","import React from 'react'\n\nimport {\n    Button,\n    Dialog,\n    DialogTitle,\n    DialogContent,\n    DialogContentText,\n    DialogActions,\n} from '@material-ui/core'\n\ninterface ModalOptions {\n    text: string\n    title?: string\n    icon?: React.FC\n    showCancelButton?: boolean\n    confirmButtonText?: string\n    cancelButtonText?: string\n}\n\nconst Modal = ({\n    isOpen,\n    onResolve,\n    text,\n    title,\n    icon: Icon,\n    showCancelButton,\n    confirmButtonText,\n    cancelButtonText,\n}: ModalOptions & { isOpen: boolean; onResolve: (val: boolean) => void }) => {\n    return (\n        <Dialog\n            open={isOpen}\n            onClose={() => onResolve(false)}\n            aria-labelledby='alert-dialog-title'\n            aria-describedby='alert-dialog-description'\n        >\n            {/* {Icon && <Icon />} */}\n            {title && (\n                <DialogTitle id='alert-dialog-title'>{title}</DialogTitle>\n            )}\n            <DialogContent>\n                <DialogContentText id='alert-dialog-description'>\n                    {text}\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant='contained'\n                    disableElevation\n                    onClick={() => onResolve(true)}\n                    color='primary'\n                    autoFocus\n                >\n                    {confirmButtonText ?? 'Confirm'}\n                </Button>\n                {showCancelButton && (\n                    <Button\n                        // variant='contained'\n                        onClick={() => onResolve(false)}\n                        // color='secondary'\n                    >\n                        {cancelButtonText ?? 'Cancel'}\n                    </Button>\n                )}\n            </DialogActions>\n        </Dialog>\n    )\n}\n\nexport default Modal\n","import { createModal } from 'react-modal-promise'\nimport Modal from '../components/Modal'\n\nconst fireModal = createModal(Modal)\n\nexport default fireModal\n","import { parseTsv, rowHeadingsToProps } from '../lib/parse-tsv'\nimport config from '../config'\nimport { openDB, deleteDB, IDBPDatabase } from 'idb'\n\nimport cedictUrl from '../assets/cc-cedict.tsv'\nimport { NoDataError } from '../lib/errors'\nimport fireModal from '../lib/fireModal'\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\n\nconst { DB_NAME, CEDICT_TABLE_NAME, DB_VERSION } = config\n\nconst DB_REQUIRES_SEEDING = 'dbRequiresSeeding'\nconst CEDICT_TSV_ETAG = 'cedictTsvEtag'\n\nconst seedDb = async (db: IDBPDatabase) => {\n    const connection = (navigator as any).connection || {}\n\n    if (\n        process.env.NODE_ENV === 'development' || // debug\n        connection.saveData ||\n        connection.type === 'cellular'\n    ) {\n        const head = await fetch(cedictUrl, {\n            method: 'HEAD',\n        })\n\n        const contentLength = head.headers.get('content-length')\n\n        const title = contentLength\n            ? `Download ${(+contentLength / 1000 / 1000).toFixed(1)}\\xa0MB?`\n            : 'Download data?'\n\n        const userConfirmed = await fireModal({\n            showCancelButton: true,\n            confirmButtonText: 'Download',\n            title,\n            text:\n                'This is required the first time you run this app. Consider switching to a Wi-Fi connection.',\n            icon: HelpOutlineIcon,\n        })\n\n        if (!userConfirmed) {\n            // TODO - show app load fail state\n\n            throw new NoDataError('User declined to download data')\n        }\n    }\n\n    const res = await fetch(cedictUrl)\n    const text = await res.text()\n\n    const rows = parseTsv(text)\n    const entries = rowHeadingsToProps(rows)\n\n    const tx = db.transaction(CEDICT_TABLE_NAME, 'readwrite')\n    const store = tx.objectStore(CEDICT_TABLE_NAME)\n\n    store.put(entries, 'entries')\n\n    localStorage.removeItem(DB_REQUIRES_SEEDING)\n    localStorage.setItem(CEDICT_TSV_ETAG, res.headers.get('etag') || 'unknown')\n\n    return\n}\n\nlet db = new Promise<IDBPDatabase>(async (resolve, reject) => {\n    const _db = await openDB(DB_NAME, DB_VERSION, {\n        upgrade(db, oldVersion, _newVersion, transaction) {\n            if (!oldVersion) {\n                db.createObjectStore(CEDICT_TABLE_NAME)\n            }\n\n            if (oldVersion < 1582933903995) {\n                localStorage.clear()\n\n                const store = transaction.objectStore(CEDICT_TABLE_NAME)\n\n                store.clear()\n\n                localStorage.setItem(DB_REQUIRES_SEEDING, 'yes')\n            }\n        },\n    })\n\n    const tx = _db.transaction(CEDICT_TABLE_NAME)\n    const store = tx.objectStore(CEDICT_TABLE_NAME)\n\n    const entriesExist = await store.getKey('entries')\n\n    if (!entriesExist || localStorage.getItem(DB_REQUIRES_SEEDING)) {\n        try {\n            await seedDb(_db)\n        } catch (e) {\n            console.error(e)\n\n            reject(e)\n        }\n    }\n\n    resolve(_db)\n})\n\nconst Cedict = {\n    all: new Promise<CedictEntry[]>(async (resolve, reject) => {\n        try {\n            const _db = await db\n\n            const tx = _db.transaction(CEDICT_TABLE_NAME)\n            const store = tx.objectStore(CEDICT_TABLE_NAME)\n\n            const entries = await store.get('entries')\n\n            resolve(entries)\n        } catch (e) {\n            console.error(e)\n\n            reject(e)\n        }\n    }),\n}\n\nif (process.env.NODE_ENV === 'development') {\n    // debug\n\n    const _window = window as any\n\n    _window.deleteDB = deleteDB\n    _window.openDB = openDB\n    _window.seedDb = seedDb\n    _window.Cedict = Cedict\n    _window.db = db\n}\n\nexport default Cedict\n","type vowel =\n    | 'a'\n    | 'e'\n    | 'i'\n    | 'o'\n    | 'u'\n    | 'v'\n    | 'A'\n    | 'E'\n    | 'I'\n    | 'O'\n    | 'U'\n    | 'V'\n\nconst toneMarks: { [key in vowel]: string } = {\n    a: 'aāáǎà',\n    e: 'eēéěè',\n    i: 'iīíǐì',\n    o: 'oōóǒò',\n    u: 'uūúǔù',\n    v: 'üǖǘǚǜ',\n    A: 'AĀÁǍÀ',\n    E: 'EĒÉĚÈ',\n    I: 'IĪÍǏÌ',\n    O: 'OŌÓǑÒ',\n    U: 'UŪÚǓÙ',\n    V: 'ÜǕǗǙǛ',\n}\n\nconst normalize = (syl: string) => syl.replace(/u:|v/g, 'ü')\n\nconst addToneMark = (char: vowel | 'ü', tone: number) => {\n    if (tone === 5) tone = 0\n\n    if (char === 'ü') char = 'v'\n\n    return toneMarks[char][tone]\n}\n\nconst isPinyin = (syl: string) => /^[a-hj-tw-z][a-zü:]*\\d?$/i.test(syl)\n\nconst withToneMark = (syl: string) => {\n    const lastChar = syl.slice(-1)[0]\n\n    if (!/\\d/.test(lastChar)) {\n        syl += '5'\n    }\n\n    const tone = +syl.slice(-1)[0]\n\n    return syl\n        .slice(0, -1)\n        .replace(/(?:a|e|o(?=u)|[iouüv](?![aeiouüv]))/i, m =>\n            addToneMark(m as vowel | 'ü', tone),\n        )\n}\n\nconst prettifySyl = (syl: string) => {\n    return isPinyin(syl) ? withToneMark(normalize(syl)) : syl\n}\n\nconst prettify = (word: string) =>\n    word.replace(/[a-zü:]+\\d?/gi, s => prettifySyl(s))\n\nexport { prettify }\n\n// success\n// prettify('Ni3 you3 nu:3 peng2 you3 ma?');\n// prettify('Ma3 ma3, hu1 hu5 nv5');\n// prettify('mao4 mei4');\n// prettify('xiong1 shi4 ji1 dan4');\n// prettify('lu:e4');\n// prettify('lve4');\n// prettify('lüe4');\n\n// // known issues\n// prettify('high5');\n// prettify('GangOf4');\n\n// \"Nǐ yǒu nǚ péng yǒu ma?\"\n","import config from '../config'\n\nconst { MAX_TIMEOUT } = config\n\nconst search = async (\n    query: string,\n    data: any /* TODO */,\n    logicalOr = false, // TODO\n): Promise<{ results?: CedictEntry[]; error?: Error }> => {\n    let error, results\n\n    try {\n        let conditions: SearchCondition[]\n\n        const lines = query\n            .split(/\\r?\\n/)\n            .map(el => el.trim())\n            .filter(el => el && !el.startsWith('#'))\n\n        if (lines.length === 1 && lines[0] === '*') {\n            conditions = []\n        } else if (lines.length === 0) {\n            throw new RangeError('Must have at last one condition')\n        } else {\n            conditions = lines.map(toCondition)\n        }\n\n        const searchWorker = new Worker(\n            `${process.env.PUBLIC_URL}/search-worker.js`,\n        )\n\n        searchWorker.postMessage({\n            type: 'SEARCH',\n            conditions,\n            entries: data,\n            logicalOr,\n        })\n\n        results = await new Promise<CedictEntry[]>((resolve, reject) => {\n            searchWorker.onmessage = ({ data }) => {\n                if (data.type === 'ERROR') {\n                    reject(data.error)\n                }\n\n                searchWorker.terminate()\n\n                resolve(data.results)\n            }\n\n            setTimeout(() => {\n                searchWorker.terminate()\n\n                reject('Timeout exceeded')\n            }, MAX_TIMEOUT)\n        })\n    } catch (e) {\n        error = e\n    }\n\n    return { results, error }\n}\n\nfunction toCondition(clause: string): SearchCondition {\n    const matcher = /^(?<prop>\\S+)\\s+(?<method>\\S+)\\s+(?<arg>.+)$/\n\n    const matches = clause.match(matcher)\n\n    if (!matches) {\n        throw new SyntaxError(\n            'Each condition must be formatted as \"subject verb object\"',\n        )\n    }\n\n    return { ...((matches.groups as any) as SearchCondition) }\n}\n\nexport { search }\n","const convertBasicToAdvanced = (query: string) => {\n    // TODO\n\n    const converted = ['simp', 'trad', 'pinyin', 'def']\n        .map(p => `${p} has ${query}`)\n        .join('\\n')\n\n    console.log(converted)\n\n    return converted\n}\n\nexport default convertBasicToAdvanced\n","import React, { useReducer, useMemo } from 'react'\nimport Cedict from '../repositories/cedict'\nimport { search } from '../lib/search'\nimport fireModal from '../lib/fireModal'\nimport { setB64QueryParam } from '../lib/query-param-helper'\n\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline'\nimport convertBasicToAdvanced from '../lib/convertBasicToAdvanced'\n\nexport interface AppState {\n    charSet: 'trad' | 'simp'\n    results: CedictEntry[] | null\n    error: Error | null\n    searchQuery: string\n    resultsLoading: boolean\n    cedictDataLoading: boolean\n    page: number | null\n    searchType: 'basic' | 'advanced'\n}\n\ntype SearchActionType = Partial<AppState>\n\nconst initialState: AppState = {\n    charSet: localStorage.getItem('charSet') === 'trad' ? 'trad' : 'simp',\n    results: null,\n    error: null,\n    searchQuery: '',\n    resultsLoading: false,\n    cedictDataLoading: true,\n    page: null,\n    searchType: 'basic',\n}\n\nconst reducer = (\n    state: AppState = initialState,\n    action: SearchActionType,\n): AppState => {\n    Object.entries(action).forEach(([k, v]) => {\n        ;(state as any)[k] = v\n    })\n\n    return { ...state }\n}\n\ninterface LoadResultsFromQueryOptions {\n    pushNewHistoryItem?: boolean\n    searchType: 'advanced' | 'basic'\n}\n\nconst loadResultsFromQuery = async (\n    query: string,\n    dispatch: React.Dispatch<SearchActionType>,\n    { pushNewHistoryItem = false, searchType }: LoadResultsFromQueryOptions,\n) => {\n    const searchQuery =\n        searchType === 'advanced'\n            ? query\n            : convertBasicToAdvanced(query)\n\n    dispatch({ results: null, resultsLoading: true })\n\n    const data = await Cedict.all\n\n    const { results, error } = await search(searchQuery, data, searchType === 'basic')\n\n    if (error) {\n        fireModal({ text: error.message, icon: ErrorOutlineIcon })\n\n        return dispatch({ results: null, resultsLoading: false })\n    } else {\n        setB64QueryParam('q', query, pushNewHistoryItem)\n\n        return dispatch({ results, resultsLoading: false })\n    }\n}\n\nconst AppContext = React.createContext(\n    (initialState as any) as {\n        state: AppState\n        dispatch: React.Dispatch<Partial<AppState>>\n    },\n)\n\nconst AppStateProvider: React.FC = ({ children }) => {\n    const [state, dispatch] = useReducer(reducer, initialState)\n\n    const value = useMemo(() => ({ state, dispatch }), [state, dispatch])\n\n    return <AppContext.Provider value={value}>{children}</AppContext.Provider>\n}\n\nexport {\n    reducer,\n    initialState,\n    loadResultsFromQuery,\n    AppContext,\n    AppStateProvider,\n}\n","import React, { useContext } from 'react'\nimport { prettify } from '../lib/pinyinize'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { AppContext } from '../state/Context'\n\nconst useStyles = makeStyles(theme => ({\n    root: { marginBottom: '2em' },\n    charGloss: { display: 'flex', flexWrap: 'wrap' },\n    rubyRoot: { fontSize: '2.5em', paddingRight: '0.2em' },\n    defList: { paddingLeft: '1.2em', margin: '0.5em 0' },\n    headwordNoRuby: { fontSize: '2.5em' },\n}))\n\nconst Result: React.FC<{\n    entry: CedictEntry\n    isLast: boolean\n}> = ({ entry, isLast }) => {\n    const classes = useStyles()\n\n    const { state } = useContext(AppContext)\n\n    const { charSet } = state\n\n    const { pinyin, def } = entry\n\n    const currentCharVersion = entry[charSet]\n\n    const chars = Array.from(currentCharVersion)\n    const oppCharTypeName = charSet === 'simp' ? 'trad' : 'simp'\n    const oppCharVersion = entry[oppCharTypeName]\n\n    const pinyinSyls: (string | null)[] = pinyin\n        .split(' ')\n        .map(py => prettify(py))\n\n    let renderRuby = false\n\n    if (chars.length !== pinyinSyls.length) {\n        process.env.NODE_ENV === 'development' && console.log(entry)\n    } else {\n        chars.forEach((char, idx) => {\n            const py = pinyinSyls[idx] as string\n\n            if (py === 'xx') {\n                pinyinSyls[idx] = null\n            } else if (py === char) {\n                // noop\n            } else {\n                renderRuby = true\n            }\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.charGloss}>\n                {chars.map((char, idx) => {\n                    if (!renderRuby) {\n                        return (\n                            <span key={idx} className={classes.headwordNoRuby}>\n                                {char}\n                            </span>\n                        )\n                    }\n\n                    return (\n                        <ruby key={idx} className={classes.rubyRoot}>\n                            {char}\n                            <rp>(</rp>\n                            <rt>{pinyinSyls[idx] || '\\xa0'}</rt>\n                            <rp>)</rp>\n                        </ruby>\n                    )\n                })}\n            </div>\n            {oppCharVersion !== currentCharVersion && (\n                <div>\n                    {oppCharTypeName[0].toUpperCase() +\n                        oppCharTypeName.slice(1)}\n                    : {oppCharVersion}\n                </div>\n            )}\n            <div>\n                <ul className={classes.defList}>\n                    {def.split(/\\s*[/;]\\s*/).map((item, idx) => (\n                        <li key={idx}>{item}</li>\n                    ))}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport default Result\n\n// {\n//     ;`${index}. ${chars} [${prettify(pinyin)}]\\n${\n// }\n","import { useState } from \"react\"\n\nlet idx = 0\n\nconst useHtmlId = (prefix = 'id') => {\n    idx++\n\n    return useState(`${prefix}-${idx}`)[0]\n}\n\nexport default useHtmlId\n","import React, { useContext } from 'react'\nimport { CircularProgress } from '@material-ui/core'\n\nimport Pagination from '@material-ui/lab/Pagination'\n\nimport Result from '../components/Result'\nimport { AppContext } from '../state/Context'\nimport { setQueryParam } from '../lib/query-param-helper'\nimport useHtmlId from '../hooks/useHtmlId'\n\nconst PER_PAGE = 50\n\nconst ResultsList: React.FC<{ page: number; results: CedictEntry[] }> = ({\n    results,\n    page,\n}) => {\n    return (\n        <>\n            {results\n                .slice((page - 1) * PER_PAGE, page * PER_PAGE)\n                .map((result, idx) => {\n                    return (\n                        <Result\n                            key={idx}\n                            entry={result}\n                            isLast={idx === results.length - 1}\n                        />\n                    )\n                })}\n        </>\n    )\n}\n\nconst ResultsDisplay: React.FC = () => {\n    const { state, dispatch } = useContext(AppContext)\n\n    const outputId = useHtmlId('output')\n\n    const { results, resultsLoading, page: _page } = state\n\n    const page = _page || 1\n\n    return (\n        <output id={outputId} className='output'>\n            {resultsLoading ? (\n                <div\n                    style={{\n                        marginTop: '2em',\n                        display: 'flex',\n                        justifyContent: 'center',\n                    }}\n                >\n                    <CircularProgress style={{ zoom: 1.2 }} color='primary' />\n                </div>\n            ) : (\n                results && (\n                    <>\n                        <div style={{ margin: '1.5em 0', display: 'flex' }}>\n                            <hr style={{ flexGrow: 1, height: 0 }} />\n                            <div style={{ padding: '0 20px' }}>\n                                <strong>\n                                    {results.length.toLocaleString('en-US')}\n                                </strong>{' '}\n                                <span>\n                                    {results.length === 1\n                                        ? 'result'\n                                        : 'results'}\n                                </span>\n                            </div>\n                            <hr style={{ flexGrow: 1, height: 0 }} />\n                        </div>\n                        {results.length > 0 && (\n                            <ResultsList page={page} results={results} />\n                        )}\n\n                        <Pagination\n                            page={page}\n                            onChange={(_e: any, n: number) => {\n                                dispatch({ page: n })\n\n                                setQueryParam('page', n.toString(), true)\n\n                                window.scrollTo(0, 0)\n                            }}\n                            count={Math.floor(results.length / PER_PAGE)}\n                        />\n                    </>\n                )\n            )}\n        </output>\n    )\n}\n\nexport default ResultsDisplay\n","import React, { useContext } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport {\n    FormControl,\n    InputLabel,\n    FilledInput,\n    InputAdornment,\n    Tooltip,\n    IconButton,\n} from '@material-ui/core'\n\nimport useHtmlId from '../hooks/useHtmlId'\nimport { AppContext } from '../state/Context'\n\nconst BasicSearch: React.FC = () => {\n    const { dispatch, state } = useContext(AppContext)\n\n    const { searchQuery } = state\n\n    const searchConditionsId = useHtmlId('search-conditions')\n\n    return (\n        <FormControl style={{ margin: '1em 0' }} fullWidth variant='filled'>\n            <InputLabel htmlFor={searchConditionsId}>Search terms</InputLabel>\n            <FilledInput\n                id={searchConditionsId}\n                value={searchQuery}\n                onChange={e => {\n                    dispatch({\n                        searchQuery: e.currentTarget.value,\n                    })\n                }}\n                autoComplete='off'\n                autoCorrect='off'\n                autoCapitalize='off'\n                spellCheck='false'\n                name='search-conditions'\n                placeholder='Enter search terms'\n                endAdornment={\n                    <InputAdornment position='end'>\n                        <Tooltip placement='left' title='Search' arrow>\n                            <IconButton\n                                type='submit'\n                                aria-label='Search'\n                                style={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    transform: 'translateY(-50%)',\n                                    right: 0,\n                                    marginRight: 6,\n                                }}\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    )\n}\n\nexport default BasicSearch\n","import React, { useContext } from 'react'\nimport SearchIcon from '@material-ui/icons/Search'\n\nimport {\n    FormControl,\n    InputLabel,\n    FilledInput,\n    InputAdornment,\n    Tooltip,\n    IconButton,\n} from '@material-ui/core'\n\nimport useHtmlId from '../hooks/useHtmlId'\nimport { AppContext } from '../state/Context'\n\nconst AdvancedSearch: React.FC = () => {\n    const { dispatch, state } = useContext(AppContext)\n\n    const { searchQuery } = state\n\n    const searchConditionsId = useHtmlId('search-conditions')\n\n    return (\n        <FormControl style={{ margin: '1em 0' }} fullWidth variant='filled'>\n            <InputLabel\n                style={{\n                    fontFamily:\n                        'monospace, \"Noto Sans CJK SC\", \"Noto Sans CJK TC\", \"Microsoft YaHei\"',\n                }}\n                htmlFor={searchConditionsId}\n            >\n                Enter query conditions\n            </InputLabel>\n            <FilledInput\n                id={searchConditionsId}\n                style={{\n                    fontFamily:\n                        'monospace, \"Noto Sans CJK SC\", \"Noto Sans CJK TC\", \"Microsoft YaHei\"',\n                }}\n                value={searchQuery}\n                onChange={e => {\n                    dispatch({\n                        searchQuery: e.currentTarget.value,\n                    })\n                }}\n                multiline\n                autoComplete='off'\n                autoCorrect='off'\n                autoCapitalize='off'\n                spellCheck='false'\n                name='search-conditions'\n                placeholder='Syntax: subject verb object'\n                endAdornment={\n                    <InputAdornment position='end'>\n                        <Tooltip placement='left' title='Search' arrow>\n                            <IconButton\n                                type='submit'\n                                aria-label='Search'\n                                style={{\n                                    position: 'absolute',\n                                    top: '50%',\n                                    transform: 'translateY(-50%)',\n                                    right: 0,\n                                    marginRight: 6,\n                                }}\n                            >\n                                <SearchIcon />\n                            </IconButton>\n                        </Tooltip>\n                    </InputAdornment>\n                }\n            />\n        </FormControl>\n    )\n}\n\nexport default AdvancedSearch\n","import React, { useContext } from 'react'\nimport { Tabs, Tab } from '@material-ui/core'\nimport { AppContext, loadResultsFromQuery } from '../state/Context'\nimport { deleteQueryParam } from '../lib/query-param-helper'\nimport useHtmlId from '../hooks/useHtmlId'\nimport BasicSearch from './BasicSearch'\nimport AdvancedSearch from './AdvancedSearch'\nimport { navigate } from '@reach/router'\n\nconst TabPanel: React.FC<{\n    id: string\n    active: boolean\n    labelledBy: string\n}> = ({ children, id, active, labelledBy }) => {\n    return (\n        <div id={id} hidden={!active} aria-labelledby={labelledBy}>\n            {children}\n        </div>\n    )\n}\n\nconst SearchForm: React.FC = () => {\n    const { dispatch, state } = useContext(AppContext)\n\n    const { searchQuery, searchType } = state\n\n    const searchFormId = useHtmlId('search-form')\n\n    const submitForm = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n\n        loadResultsFromQuery(searchQuery, dispatch, {\n            pushNewHistoryItem: true,\n            searchType,\n        })\n\n        deleteQueryParam('page', false)\n\n        dispatch({ page: null })\n    }\n\n    const basicSearchTabId = useHtmlId('basic-search-tab')\n    const advancedSearchTabId = useHtmlId('advanced-search-tab')\n    const basicSearchPanelId = useHtmlId('basic-search-panel')\n    const advancedSearchPanelId = useHtmlId('advanced-search-panel')\n\n    return (\n        <form\n            id={searchFormId}\n            style={{ marginTop: '1em' }}\n            onSubmit={submitForm}\n        >\n            <Tabs\n                indicatorColor='primary'\n                value={searchType}\n                onChange={(e, newVal) => {\n                    dispatch({ searchType: newVal })\n\n                    navigate(\n                        process.env.PUBLIC_URL +\n                            (newVal === 'advanced' ? '/advanced' : '/'),\n                    )\n                }}\n                aria-label='Search type'\n            >\n                <Tab\n                    id={basicSearchTabId}\n                    label='Basic'\n                    value='basic'\n                    aria-controls={basicSearchPanelId}\n                />\n                <Tab\n                    id={advancedSearchTabId}\n                    label='Advanced'\n                    value='advanced'\n                    aria-controls={advancedSearchPanelId}\n                />\n            </Tabs>\n            <TabPanel\n                id={basicSearchPanelId}\n                active={searchType === 'basic'}\n                labelledBy={basicSearchTabId}\n            >\n                <BasicSearch />\n            </TabPanel>\n            <TabPanel\n                id={advancedSearchPanelId}\n                active={searchType === 'advanced'}\n                labelledBy={advancedSearchTabId}\n            >\n                <AdvancedSearch />\n            </TabPanel>\n        </form>\n    )\n}\n\nexport default SearchForm\n","import React, { useEffect, useContext } from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport { Typography } from '@material-ui/core'\nimport {\n    getB64QueryParam,\n    deleteQueryParam,\n    getQueryParam,\n} from '../lib/query-param-helper'\nimport Cedict from '../repositories/cedict'\nimport { NoDataError } from '../lib/errors'\nimport ResultsDisplay from '../components/ResultsDisplay'\nimport SearchForm from '../components/SearchForm'\nimport { AppContext, loadResultsFromQuery } from '../state/Context'\n\nconst SearchPage: React.FC<RouteComponentProps & {\n    searchType: 'basic' | 'advanced'\n}> = ({ searchType }) => {\n    const { state, dispatch } = useContext(AppContext)\n\n    const { error } = state\n\n    const handleQueryParams = () => {\n        try {\n            const text = getB64QueryParam('q')\n            const page = getQueryParam('page') || '1'\n\n            if (text) {\n                dispatch({ searchQuery: text, page: +page })\n\n                loadResultsFromQuery(text, dispatch, { searchType })\n            } else {\n                deleteQueryParam('page', false)\n\n                dispatch({\n                    page: null,\n                    searchQuery: '',\n                    results: null,\n                    resultsLoading: false,\n                })\n            }\n        } catch (e) {\n            deleteQueryParam('q', false)\n            deleteQueryParam('page', false)\n\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {\n        dispatch({ searchType })\n\n        handleQueryParams()\n\n        window.addEventListener('popstate', handleQueryParams)\n        ;(async () => {\n            try {\n                await Cedict.all\n            } catch (e) {\n                if (e instanceof NoDataError) {\n                    dispatch({ error: e })\n                }\n            }\n\n            dispatch({ cedictDataLoading: false })\n        })()\n\n        return () => window.removeEventListener('popstate', handleQueryParams)\n    }, [dispatch, searchType])\n\n    return error && error instanceof NoDataError ? (\n        <>\n            <Typography variant='h4' paragraph component='h2'>\n                No dictionary data loaded\n            </Typography>\n            <div>\n                <Typography variant='body1' paragraph component='p'>\n                    Dictionary data is required to run this app. Please{' '}\n                    <a href={JSON.parse('\"\"') /* current page */}>\n                        reload the page\n                    </a>{' '}\n                    and try again.\n                </Typography>\n            </div>\n        </>\n    ) : (\n        <>\n            <SearchForm />\n            <ResultsDisplay />\n        </>\n    )\n}\n\nexport default SearchPage\n","// @ts-nocheck\n\nimport React from 'react'\nimport { Link as ReachLink, LinkProps } from '@reach/router'\n\nconst BASE = process.env.PUBLIC_URL\n\nconst Link: React.FC<LinkProps<any> & {\n    absolute?: boolean\n    external?: boolean\n}> = React.forwardRef(\n    ({ to = '', children, absolute, external, ...props }, ref) => {\n        if (external) {\n            return (\n                <a\n                    href={to}\n                    ref={ref}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                >\n                    {children}\n                </a>\n            )\n        }\n\n        if (!absolute && to[0] === '/') {\n            to = `${BASE}${to}`\n        }\n        return (\n            <ReachLink ref={ref} {...props} to={to}>\n                {children}\n            </ReachLink>\n        )\n    },\n)\n\nexport default Link\n","import React, { useContext } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Link from '../components/Link'\nimport { AppContext } from '../state/Context'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        color: 'antiquewhite',\n        textAlign: 'center',\n        paddingTop: '3.5em',\n        paddingBottom: '2em',\n    },\n    text: {\n        fontFamily: 'ZhiMangXing, Roboto',\n    },\n}))\n\nexport default () => {\n    const classes = useStyles()\n\n    const { dispatch } = useContext(AppContext)\n\n    const clearQuery = () =>\n        dispatch({\n            searchQuery: '',\n            results: null,\n            resultsLoading: false,\n        })\n\n    return (\n        <header className={classes.root}>\n            <Typography variant='h1' component='h1' className={classes.text}>\n                <Link tabIndex={-1} to='/' onClick={clearQuery} className='unstyled'>\n                    字字不忘\n                </Link>\n            </Typography>\n        </header>\n    )\n}\n","import React from 'react'\n\ninterface ErrorInfoObject {\n    componentStack: any\n}\n\ninterface ErrorBoundaryState {\n    error?: Error\n    errorInfo?: ErrorInfoObject\n}\n\nclass ErrorBoundary extends React.Component {\n    constructor(props: any) {\n        super(props)\n\n        const state: ErrorBoundaryState = {\n            error: undefined,\n            errorInfo: undefined,\n        }\n\n        this.state = state\n    }\n\n    componentDidCatch(error: Error, errorInfo: ErrorInfoObject) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo,\n        })\n    }\n\n    render() {\n        const { error, errorInfo } = this.state as ErrorBoundaryState\n        const { children } = this.props\n\n        if (error) {\n            return (\n                <div>\n                    <h2>Something went wrong.</h2>\n                    <details style={{ whiteSpace: 'pre-wrap' }}>\n                        {error?.toString()}\n                        <br />\n                        {errorInfo?.componentStack}\n                    </details>\n                </div>\n            )\n        }\n        return children\n    }\n}\n\nexport default ErrorBoundary\n","import React from 'react'\nimport ErrorBoundary from '../components/ErrorBoundary'\nimport { Container } from '@material-ui/core'\n\nconst MainSubLayout: React.FC = ({ children }) => {\n    return (\n        <>\n            <Container maxWidth='sm'>\n                <main>\n                    <ErrorBoundary>{children}</ErrorBoundary>\n                </main>\n            </Container>\n        </>\n    )\n}\n\nexport default MainSubLayout\n","import React, { useContext } from 'react'\nimport { makeStyles, IconButton } from '@material-ui/core'\n\nimport Tooltip from '@material-ui/core/Tooltip'\nimport HomeIcon from '@material-ui/icons/Home'\nimport InfoIcon from '@material-ui/icons/Info'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport { navigate } from '@reach/router'\nimport { AppContext } from '../state/Context'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        zIndex: 1,\n        position: 'fixed',\n        right: 0,\n        top: 0,\n        textAlign: 'right',\n    },\n    listRoot: {\n        listStyleType: 'none',\n        padding: 0,\n    },\n}))\n\nconst links = [\n    { to: '/', text: 'Home', Icon: HomeIcon },\n    { to: '/instructions', text: 'Instructions', Icon: InfoIcon },\n    { to: '/settings', text: 'Settings', Icon: SettingsIcon },\n]\n\nconst MainNav: React.FC = () => {\n    const classes = useStyles()\n\n    const { dispatch } = useContext(AppContext)\n\n    const clearQuery = () =>\n        dispatch({\n            searchQuery: '',\n            results: null,\n            resultsLoading: false,\n        })\n\n    return (\n        <nav className={classes.root}>\n            <ul className={classes.listRoot}>\n                {links.map(({ to, text, Icon }, idx) => {\n                    return (\n                        <li key={idx}>\n                            <Tooltip placement='left' title={text} arrow>\n                                <IconButton\n                                    role='link'\n                                    onClick={() => {\n                                        if (to === '/') {\n                                            clearQuery()\n                                        }\n\n                                        navigate(`${process.env.PUBLIC_URL}${to}`)\n                                    }}\n                                    aria-label={text}\n                                >\n                                    <Icon />\n                                </IconButton>\n                            </Tooltip>\n                        </li>\n                    )\n                })}\n            </ul>\n        </nav>\n    )\n}\n\nexport default MainNav\n","import React from 'react'\nimport Header from '../components/Header'\nimport MainSubLayout from './MainSubLayout'\nimport MainNav from '../components/MainNav'\n\nconst MainLayout: React.FC<{ className: string }> = ({ children, className }) => {\n    return (\n        <div className={className}>\n            <MainNav />\n            <Header />\n            <MainSubLayout>{children}</MainSubLayout>\n        </div>\n    )\n}\n\nexport default MainLayout\n","import snarkdown from 'snarkdown'\n\nconst _instructions = `## Fuzzy Search for Chinese\n\nTry out these example queries:`;\n\nconst instructions = snarkdown(_instructions)\n\nconst samples = [\n    {\n        title: 'traditional identical to simplified',\n        query:\n            'trad sameas simp\\ntrad minlength 2\\ntrad !match \\\\P{Script=Han}',\n    },\n    {\n        title: '不...不 pattern with syllable li3 or li4',\n        query: 'simp match 不.不\\nsimp length 4\\npinyin imatch \\\\bli[34]',\n    },\n    {\n        title: 'fuzzy match on xian2 xiao4',\n        query: 'pinyin imatch ^(?:sh?[ea]|xia)ng?[12] xiao4$',\n    },\n    {\n        title: 'fuzzy match on xiao4 er2 bu4 yu3',\n        query: 'pinyin imatch ^(?:xi|sh)ao4 er2 bu4 y[ui][23]$',\n    },\n    {\n        title: '班门弄斧',\n        query: 'pinyin icontains ban1\\nsimp contains 斧\\nsimp length 4',\n    },\n    { title: 'triplicate characters', query: 'simp match (.)\\\\1\\\\1' },\n    { title: '说曹操……', query: 'simp match (..)，\\\\1' },\n    { title: 'everything', query: '*' },\n    {\n        title: 'no Chinese characters',\n        query: 'trad match ^\\\\P{Script=Han}+$',\n    },\n    {\n        title: 'Chinese characters only',\n        query: 'trad match ^\\\\p{Script=Han}+$',\n    },\n]\n\nexport default {\n  instructions,\n  samples\n};\n","import React from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport Link from '../components/Link'\n\nimport content from '../content/instructions'\nimport { encodeB64UrlSafe } from '../lib/b64'\n\nconst { samples, instructions } = content\n\nconst DocsPage: React.FC<RouteComponentProps> = () => {\n    return (\n        <>\n            <div dangerouslySetInnerHTML={{ __html: instructions }} />\n            <ul>\n                {samples.map(({ title, query }) => {\n                    const queryString = `?q=${encodeB64UrlSafe(`# ${title}\\n\\n${query}`)}`\n\n                    return (\n                        <li key={title}>\n                            <Link to={`/advanced/${queryString}`}>{title}</Link>\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default DocsPage\n","import React from 'react'\nimport { Typography } from '@material-ui/core'\nimport Link from './Link'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n    root: { margin: '2em auto' },\n}))\n\nconst Footer: React.FC = () => {\n    const classes = useStyles()\n\n    return (\n        <>\n            <footer className={classes.root}>\n                <div>\n                    <hr />\n                    <Typography\n                        style={{ margin: '1.5em auto' }}\n                        variant='body1'\n                        component='p'\n                    >\n                        Data from{' '}\n                        <Link external to='https://cc-cedict.org/wiki/'>\n                            CC-CEDICT\n                        </Link>{' '}\n                        (\n                        <Link\n                            external\n                            to='https://creativecommons.org/licenses/by-sa/3.0/'\n                        >\n                            CC BY-SA 3.0\n                        </Link>\n                        ).\n                    </Typography>\n                </div>\n            </footer>\n        </>\n    )\n}\n\nexport default Footer\n","import React, { useContext } from 'react'\nimport { RouteComponentProps } from '@reach/router'\nimport {\n    FormControl,\n    FormLabel,\n    RadioGroup,\n    FormControlLabel,\n    Radio,\n} from '@material-ui/core'\nimport { AppContext } from '../state/Context'\n\nconst SettingsPage: React.FC<RouteComponentProps> = () => {\n    const { state, dispatch } = useContext(AppContext)\n\n    const { charSet } = state\n\n    return (\n        <form onSubmit={e => e.preventDefault()}>\n            <FormControl component='fieldset'>\n                <FormLabel component='legend'>Default character set</FormLabel>\n                <RadioGroup\n                    aria-label='Default character set'\n                    name='character-set'\n                    value={charSet}\n                    onChange={e => {\n                        const charSet = e.currentTarget.value as 'trad' | 'simp'\n\n                        localStorage.setItem('charSet', charSet)\n\n                        dispatch({ charSet })\n                    }}\n                >\n                    <FormControlLabel\n                        color='primary'\n                        value='simp'\n                        control={<Radio color='primary' />}\n                        label='简 Simplified'\n                    />\n                    <FormControlLabel\n                        color='primary'\n                        value='trad'\n                        control={<Radio color='primary' />}\n                        label='繁 Traditional'\n                    />\n                </RadioGroup>\n            </FormControl>\n        </form>\n    )\n}\n\nexport default SettingsPage\n","import './lib/setup'\n\nimport React from 'react'\nimport { ThemeProvider } from '@material-ui/core/styles'\n\nimport './lib/load-fonts'\n\nimport { theme } from './lib/theme'\n\nimport PageBackground from './components/PageBackground'\nimport SearchPage from './pages/SearchPage'\nimport MainLayout from './layouts/MainLayout'\n\nimport { Router } from '@reach/router'\nimport DocsPage from './pages/DocsPage'\nimport { Container } from '@material-ui/core'\nimport Footer from './components/Footer'\nimport { AppStateProvider } from './state/Context'\nimport SettingsPage from './pages/SettingsPage'\nimport ModalContainer from 'react-modal-promise'\n\nconst App: React.FC = () => {\n    return (\n        <AppStateProvider>\n            <ThemeProvider theme={theme}>\n                <ModalContainer />\n                <PageBackground />\n                <div className='everything-container'>\n                    <MainLayout className='content-container'>\n                        <Router basepath={process.env.PUBLIC_URL}>\n                            <SearchPage searchType='basic' path='/' />\n                            <SearchPage searchType='advanced' path='/advanced' />\n                            <DocsPage path='/instructions' />\n                            <SettingsPage path='/settings' />\n                        </Router>\n                    </MainLayout>\n                    <Container className='footer-container' maxWidth='sm'>\n                        <Footer />\n                    </Container>\n                </div>\n            </ThemeProvider>\n        </AppStateProvider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.info(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.info(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.info('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.info(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n","module.exports = __webpack_public_path__ + \"static/media/cc-cedict.02fc0569.tsv\";","module.exports = __webpack_public_path__ + \"static/media/ZhiMangXing-Regular-subset.c382153c.ttf\";"],"sourceRoot":""}